"use strict";var g=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var F=Object.getOwnPropertyNames;var D=Object.prototype.hasOwnProperty;var S=(e,t)=>{for(var r in t)g(e,r,{get:t[r],enumerable:!0})},v=(e,t,r,c)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of F(t))!D.call(e,n)&&n!==r&&g(e,n,{get:()=>t[n],enumerable:!(c=k(t,n))||c.enumerable});return e};var I=e=>v(g({},"__esModule",{value:!0}),e);var z={};S(z,{default:()=>x});module.exports=I(z);var s=require("@raycast/api"),f=require("fs");var m=require("@raycast/api"),u=require("os"),a=require("path"),$=(0,m.getPreferenceValues)(),b=(0,u.homedir)(),p=$.repoPath,E=p?(0,a.join)(p,"config"):"";function i(e,t){return{homeRelative:e,repoRelative:t,homePath:(0,a.join)(b,e),repoPath:(0,a.join)(E,t),name:t.split("/").pop()||t}}var l=[i(".zshrc","zsh/zshrc"),i(".zprofile","zsh/zprofile"),i(".config/git/config","git/config"),i(".config/git/ignore","git/ignore"),i(".config/git/gh-config","git/gh-config"),i(".config/git/gl-config","git/gl-config"),i(".editorconfig","editorconfig"),i(".config/tmux/tmux.conf","tmux/tmux.conf"),i(".config/nvim/init.lua","nvim/init.lua"),i(".config/vim/vimrc","vim/vimrc"),i(".config/gdb/gdbinit","gdb/gdbinit"),i(".config/ghostty/config","ghostty/config"),i("Library/Application Support/Code/User/settings.json","vscode/settings.json"),i(".config/zed/settings.json","zed/settings.json"),i(".config/ruff/ruff.toml","ruff/ruff.toml")];var o=require("fs"),h=require("path"),d=require("@raycast/api");function y(e,t){try{if(!(0,o.existsSync)(e)||!(0,o.existsSync)(t))return!1;let r=(0,o.readFileSync)(e,"utf8"),c=(0,o.readFileSync)(t,"utf8");return r===c}catch{return!1}}function O(e){let t=(0,h.dirname)(e);(0,o.existsSync)(t)||(0,o.mkdirSync)(t,{recursive:!0})}function P(e,t){O(t),(0,o.copyFileSync)(e,t)}function _(e){if(!(0,f.existsSync)(e.homePath))return console.log(`\u26A0\uFE0F  Skipping ${e.name} (doesn't exist in home)`),"skip_missing";if((0,f.existsSync)(e.repoPath)&&y(e.repoPath,e.homePath))return console.log(`\u23ED\uFE0F  Skipping ${e.name} (files are identical)`),"skip_identical";try{return P(e.homePath,e.repoPath),console.log(`\u2705 ${e.homePath} \u2192 ${e.name}`),"success"}catch(t){return console.log(`\u274C Failed to backup ${e.name}: ${t}`),"error"}}async function x(){try{await(0,s.showToast)({style:s.Toast.Style.Animated,title:"Backing up dotfiles...",message:"Backing up from home directory to repo"}),console.log("\u{1F4E6} Backing up dotfiles from home directory -> repo...");let e=0,t=0;for(let c of l){let n=_(c);n==="success"?e++:(n==="skip_missing"||n==="skip_identical")&&t++}let r=`Backup complete! ${e} files backed up, ${t} skipped.`;console.log(`\u{1F389} ${r}`),await(0,s.showHUD)(`\u{1F389} ${r}`)}catch(e){await(0,s.showToast)({style:s.Toast.Style.Failure,title:"Backup failed",message:String(e)})}}
