"use strict";var f=Object.defineProperty;var F=Object.getOwnPropertyDescriptor;var D=Object.getOwnPropertyNames;var S=Object.prototype.hasOwnProperty;var k=(e,t)=>{for(var r in t)f(e,r,{get:t[r],enumerable:!0})},v=(e,t,r,c)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of D(t))!S.call(e,n)&&n!==r&&f(e,n,{get:()=>t[n],enumerable:!(c=F(t,n))||c.enumerable});return e};var I=e=>v(f({},"__esModule",{value:!0}),e);var z={};k(z,{default:()=>x});module.exports=I(z);var s=require("@raycast/api"),a=require("fs");var p=require("@raycast/api"),l=require("os"),g=require("path"),$=(0,p.getPreferenceValues)(),E=(0,l.homedir)(),m=$.repoPath,O=m?(0,g.join)(m,"config"):"";function o(e,t){return{homeRelative:e,repoRelative:t,homePath:(0,g.join)(E,e),repoPath:(0,g.join)(O,t),name:t.split("/").pop()||t}}var u=[o(".zshrc","zsh/zshrc"),o(".zprofile","zsh/zprofile"),o(".config/git/config","git/config"),o(".config/git/ignore","git/ignore"),o(".config/git/gh-config","git/gh-config"),o(".config/git/gl-config","git/gl-config"),o(".editorconfig","editorconfig"),o(".config/tmux/tmux.conf","tmux/tmux.conf"),o(".config/nvim/init.lua","nvim/init.lua"),o(".config/vim/vimrc","vim/vimrc"),o(".config/gdb/gdbinit","gdb/gdbinit"),o(".config/ghostty/config","ghostty/config"),o("Library/Application Support/Code/User/settings.json","vscode/settings.json"),o(".config/zed/settings.json","zed/settings.json"),o(".config/ruff/ruff.toml","ruff/ruff.toml")];var i=require("fs"),h=require("path"),d=require("@raycast/api");function y(e,t){try{if(!(0,i.existsSync)(e)||!(0,i.existsSync)(t))return!1;let r=(0,i.readFileSync)(e,"utf8"),c=(0,i.readFileSync)(t,"utf8");return r===c}catch{return!1}}function R(e){let t=(0,h.dirname)(e);(0,i.existsSync)(t)||(0,i.mkdirSync)(t,{recursive:!0})}function P(e,t){R(t),(0,i.copyFileSync)(e,t)}function _(e){if(!(0,a.existsSync)(e.repoPath))return console.log(`\u26A0\uFE0F  Skipping ${e.name} (doesn't exist in repo)`),"skip_missing";if((0,a.existsSync)(e.homePath)&&y(e.repoPath,e.homePath))return console.log(`\u23ED\uFE0F  Skipping ${e.name} (files are identical)`),"skip_identical";try{return P(e.repoPath,e.homePath),console.log(`\u2705 ${e.name} \u2192 ${e.homePath}`),"success"}catch(t){return console.log(`\u274C Failed to restore ${e.name}: ${t}`),"error"}}async function x(){try{await(0,s.showToast)({style:s.Toast.Style.Animated,title:"Restoring dotfiles...",message:"Copying from repo to home directory"}),console.log("\u{1F680} Restoring dotfiles from repo -> home directory...");let e=0,t=0;for(let c of u){let n=_(c);n==="success"?e++:(n==="skip_missing"||n==="skip_identical")&&t++}let r=`Restore complete! ${e} files restored, ${t} skipped.`;console.log(`\u{1F389} ${r}`),await(0,s.showHUD)(`\u{1F389} ${r}`)}catch(e){await(0,s.showToast)({style:s.Toast.Style.Failure,title:"Restore failed",message:String(e)})}}
