"use strict";var w=Object.defineProperty;var D=Object.getOwnPropertyDescriptor;var N=Object.getOwnPropertyNames;var z=Object.prototype.hasOwnProperty;var j=(t,e)=>{for(var i in e)w(t,i,{get:e[i],enumerable:!0})},C=(t,e,i,l)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of N(e))!z.call(t,o)&&o!==i&&w(t,o,{get:()=>e[o],enumerable:!(l=D(e,o))||l.enumerable});return t};var E=t=>C(w({},"__esModule",{value:!0}),t);var O={};j(O,{default:()=>x});module.exports=E(O);var r=require("@raycast/api"),a=require("path"),u=require("fs/promises");var h=require("@raycast/api"),F=require("path"),S=require("fs/promises"),y=require("child_process");async function B(t,...e){let i=(0,F.join)(h.environment.assetsPath,"compiled_raycast_swift/swift");return await(0,S.chmod)(i,"755"),new Promise((l,o)=>{let p=[t];for(let m of e)try{p.push(JSON.stringify(m,(n,d)=>d===void 0?null:d))}catch(n){o(new f("Failed to serialize input to JSON: "+n.message));return}let c=(0,y.spawn)(i,p),s=[],g=[];c.stdout?.on("data",m=>{s.push(m.toString())}),c.stderr?.on("data",m=>{g.push(m.toString())}),c.on("exit",m=>{if(m===0)try{let n=s.join("").trim();n.length!=0?l(JSON.parse(n)):l(null)}catch(n){let d=new f("Failed to deserialize result from JSON: "+n.message);d.stdout=s.join("").trim(),d.stderr=g.join("").trim(),o(d)}else{let n=new f(g.join("").trim()||s.join("").trim()||"Could not get any data");n.stdout=s.join("").trim(),n.stderr=g.join("").trim(),o(n)}}),c.on("error",m=>{o(m)})})}async function P(t){return await B("compressPDF",t)}var f=class extends Error{constructor(e){super(e),this.name="SwiftError"}};async function I(t){try{return await(0,u.access)(t,u.constants.F_OK),!0}catch{return!1}}async function x(){let t=[];try{let e=await(0,r.getSelectedFinderItems)();if(!e.length)throw new Error("No PDF selected");if(t=e.filter(i=>i.path.endsWith(".pdf")),t.length===0)throw new Error("No PDF selected")}catch(e){await(0,r.showToast)({style:r.Toast.Style.Failure,title:"Could not get selected PDF files",message:String(e).trim().replace("Error: ","")})}for(let e of t){let i=(0,a.basename)(e.path);await(0,r.showToast)({style:r.Toast.Style.Animated,title:`Compressing ${i}`});let l=(0,a.dirname)(e.path),p=`${(0,a.basename)(e.path,(0,a.extname)(e.path))} - compressed${(0,a.extname)(e.path)}`,c=(0,a.join)(l,p);if(await I(c)){await(0,r.showToast)({style:r.Toast.Style.Failure,title:`"${p}" already exists.`});continue}try{let s=await P(e.path);if(s.savedPercentage===0){await(0,r.showToast)({style:r.Toast.Style.Failure,title:"No improvement",message:`${i} could not be compressed further.`});continue}await(0,u.copyFile)(s.compressedURL,c),await(0,r.showToast)({style:r.Toast.Style.Success,title:`Compressed ${i}`,message:`Saved ${s.savedPercentage}% (${$(s.originalSize)} \u2192 ${$(s.compressedSize)})`}),await(0,r.showInFinder)(c)}catch(s){await(0,r.showToast)({style:r.Toast.Style.Failure,title:`Failed to compress ${i}`,message:s instanceof Error?s.message:String(s)})}}}function $(t){return t<1024?`${t} B`:t<1024*1024?`${(t/1024).toFixed(1)} KB`:`${(t/1024/1024).toFixed(1)} MB`}
